"""
Copyright 2024 IMAX Corporation
Copyright 2024 Modus Create LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

"""
Augments a blob with metadata using custom providers.
"""

load("//gcs/private:providers.bzl", "RemotePath")

def _augmented_blob_impl(ctx):
    return [
        RemotePath(remote_path = ctx.attr.remote_path),
        DefaultInfo(
            files = depset([ctx.file.local_path]),
            runfiles = ctx.runfiles([ctx.file.local_path]),
        ),
    ]

augmented_blob = rule(
    attrs = {
        "local_path": attr.label(
            doc = "Local path of the file downloaded from GCS",
            allow_single_file = True,
            mandatory = True,
        ),
        "remote_path": attr.string(
            doc = "Remote GCS path of the file, minus the gs://BUCKET/ prefix",
            mandatory = True,
        ),
    },
    provides = [RemotePath],
    implementation = _augmented_blob_impl,
)

def _augmented_executable_impl(ctx):
    # creates a symlink since Bazel requires a file generated by this rules as the `executable` of DefaultInfo
    lnk = ctx.actions.declare_file("file.exe")
    ctx.actions.symlink(output = lnk, target_file = ctx.executable.local_path, is_executable = True)
    return [
        RemotePath(remote_path = ctx.attr.remote_path),
        DefaultInfo(
            files = depset([ctx.file.local_path]),
            runfiles = ctx.runfiles([ctx.file.local_path]),
            executable = lnk,
        ),
    ]

augmented_executable = rule(
    attrs = {
        "local_path": attr.label(
            doc = "Local path of the file downloaded from GCS",
            allow_single_file = True,
            mandatory = True,
            executable = True,
            cfg = "target",
        ),
        "remote_path": attr.string(
            doc = "Remote GCS path of the file, minus the gs://BUCKET/ prefix",
            mandatory = True,
        ),
    },
    provides = [RemotePath],
    implementation = _augmented_executable_impl,
    executable = True,
)
